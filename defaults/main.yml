---

# A prefix for all location can be specified if you need to copy files in an
# unusual path (when you are installing a system using a chroot for example).
#
#ramdisk_prefix: /srv/target

# Where should be located the generated ramdisk.
#
# In this location you would find a full set of files suitable for a PXE
# boot.
#
ramdisk_target: '/tmp/tftpboot/'

# If defined, the ramdisk image will be copied to /boot/tmpfs. Use this
# option if you don't use a PXE to boot your server.
#
#ramdisk_copy_to_boot: yes

# A whitespace separeted list of users that allowed to connect to the
# dropbear ssh environment during preboot. If not defined, only root ssh
# keys will be copied.
#
# update-initramfs will look for these users' ssh keys and deploy them to
# the dropbear's root account.
#
# This is useful for debug purposes and mainly to unlock an encrypted
# ramdisk image.
#
#ramdisk_dropbear_users: 'john jane'


# ramdisk image extension.
#
# extesion will determine which type of compression to use:
#  - .tar.gz|.tgz: gzip
#  - .tar.bz2|.tbz2: bzip2
#  - .tar.Z|.taz: compress
#  - .tar.xz: xz
#  - .tar.lz|.tlz: lzip
#  - .tar.lzo|.tzo: lzop
#  - .tar.lzma: lzma
#
# Make sure you have the appropriate tools installed. gzip is recommended
# for performances.
#
# If the extension is suffixed by ".gpg" the ramdisk image will be encrypted
# using a GPG passphrase which can be provided either by the use of
# ramdisk_gpg_passphrase (not recommended since it would be stored on an
# unprotected location) or through a FIFO.
#
ramdisk_tar_ext: '.tar.gz'

# A GPG passphrase used to encrypt the ramdisk image.
#
# THIS IS NOT A RECOMMENDED OPTION.
#
# If your ramdisk image is meant to be encrypted you need to provide a
# passphrase. Using this option allows you to defined it. As the passphrase
# is stored in the /boot/ramdisk/ramdisk.conf file by default it is
# recommended to not use this option.
#
# If you want an encrypted ramdisk an not store the passphrase you must live
# this option empty. You will be asked to for the passphrase during the
# ramdisk image generation through a fifo:
#
#  echo   "Sec3ret-passph@se" > /tmp/tftpboot/pass
#
#ramdisk_gpg_passphrase:

# GPG cipher to use when encrypting the ramdisk image. ASE256 is the current
# recommended. TWOFISH is also a good alternative.
#
# See:
# - http://en.wikipedia.org/wiki/Advanced_Encryption_Standard
# - http://en.wikipedia.org/wiki/Twofish
#
ramdisk_gpg_cipher: AES256

# A list of extra files to exclude from the ramdisk image. The patterns are
# the ones used by the tar command (see tar manpage for details). You should
# not provide the leading slash.
#
#ramdisk_tar_exclude_extra:

# Create a booting CDROM image
#
# If defined create a ISO image of current live system.
#ramdisk_iso_file: live-boot.iso


# If the PXE files are not stored at the root of the TFTP repository you must
# declare here the path to the grub PXE files.
#
# For example if your TFTP root is /srv/tftp and all you grub PXE is in
# /srv/tftp/ramdisk, your system looks like:
#
# -- /srv/tftp
#    +-- ramdisk
#    |   +-- boot
#    |   |   +-- grub
#    |   |   |   +-- grub.cfg
#    |   |   |   `-- (other grub files)
#    |   +-- ROLE1
#    |   |   +-- vmlinuz
#    |   |   +-- initrd.img
#    |   |   `-- ROLE1.tar.gz
#    |   +-- ROLE2
#    |   |   +-- vmlinuz
#    |   |   +-- initrd.img
#    |   |   `-- ROLE2.tar.gz
#    |   `-- ROLEn
#    `-- (other tftp files)
#
# You shoud thus set ramdisk_pxe_prefix to "ramdisk"
#
#ramdisk_pxe_prefix:

# If you are using multiple roles you can define which role this image
# should be.
#
#ramdisk_pxe_role:


# The url from where the RAMdisk is downloaded.
#
# If the URL is: http://10.10.10.1/role/file.tar.gz, the PXE URL should be
# set to "http://10.10.10.1/role"
#
#ramdisk_pxe_url:

# Overlay configuration: path to a file to be copied to /etc/overlays.
#
# An overlay is executed once the ramdisk is setup. This allows you to have
# the same RAMdisk to run multiple servers.
#
# TODO: Add some documentation about overlays.
#
# ramdisk_overlay:
#

# Create a booting CDROM image
#
# If defined create a ISO image of current live system.
#ramdisk_iso_file: live-boot.iso


# If the PXE files are not stored at the root of the TFTP repository you must
# declare here the path to the grub PXE files.
#
# For example if your TFTP root is /srv/tftp and all you grub PXE is in
# /srv/tftp/ramdisk, your system looks like:
#
# -- /srv/tftp
#    +-- ramdisk
#    |   +-- boot
#    |   |   +-- grub
#    |   |   |   +-- grub.cfg
#    |   |   |   `-- (other grub files)
#    |   +-- ROLE1
#    |   |   +-- vmlinuz
#    |   |   +-- initrd.img
#    |   |   `-- ROLE1.tar.gz
#    |   +-- ROLE2
#    |   |   +-- vmlinuz
#    |   |   +-- initrd.img
#    |   |   `-- ROLE2.tar.gz
#    |   `-- ROLEn
#    `-- (other tftp files)
#
# You shoud thus set ramdisk_pxe_prefix to "ramdisk"
#
#ramdisk_pxe_prefix:

# If you are using multiple roles you can define which role this image
# should be.
#
#ramdisk_pxe_role:


# The url from where the RAMdisk is downloaded.
#
# If the URL is: http://10.10.10.1/role/file.tar.gz, the PXE URL should be
# set to "http://10.10.10.1/role"
#
#ramdisk_pxe_url:

# Overlay configuration: path to a file to be copied to /etc/overlays.
#
# An overlay is executed once the ramdisk is setup. This allows you to have
# the same RAMdisk to run multiple servers.
#
# TODO: Add some documentation about overlays.
#
# ramdisk_overlay:
#


# Boot IP configuration.
#
# This work as described for the boot IP kernel command line parameter at
# https://www.kernel.org/doc/Documentation/filesystems/nfs/nfsroot.txt
#
# Variables are prefixed with "ramdisk_ip_" and all dash (-) is replaced
# with an underscore (_).
#
# Please note that is you are using RAMDISK_IP_DEVICE, on multiple device
# system, the one that will be used is the first that received a DHCP reply.
#
#
# IP address of the client.
#ramdisk_ip_client_ip:
#
# IP address of the NFS server.
#ramdisk_ip_server_ip:
#
# IP address of a gateway if the server is on a different subnet.
#ramdisk_ip_gw_ip:
#
# Netmask for local network interface.
#ramdisk_ip_netmask:
#
# Name of the client.
#ramdisk_ip_hostname:
#
# Name of network device to use.
#ramdisk_ip_device:
#
# Method to use for autoconfiguration.
#ramdisk_ip_autoconf:
#
# IP address of first nameserver.
#ramdisk_ip_dns0_ip:
#
# IP address of second nameserver.
#ramdisk_ip_dns1_ip:

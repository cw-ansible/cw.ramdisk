#!/bin/sh

PREREQ="udev"
prereqs() {
    echo "$PREREQ"
}

case $1 in
    prereqs)
        prereqs
        exit 0
    ;;
esac

. /scripts/functions

MAX_ROUNDS=10
SLEEP_ROUND=1

_set_network() {
    # give a chance for tg3 links to come up.
    for DEVICE in $(ifconfig -a | awk '{if($2=="Link"){print $1}}'); do
	# if /run/net-${DEVICE}.conf exists there is a slight chance the network
	# interface has ben set up
	if test -e /run/net-${DEVICE}.conf; then
	    return
	fi
	
	log_begin_msg "Trying to setup interface ${DEVICE}"
	ifconfig ${DEVICE} up
	if test $? -eq 0; then
	    log_success_msg
	else
	    log_failure_msg
	fi
	
	i=0
	while test $i -lt $MAX_ROUNDS; do
	    ifconfig ${DEVICE} | grep -q UP
	    if test $? -ne 0; then
		log_begin_msg "Interface ${DEVICE} not UP $i/$MAX_ROUNDS"
		
		i=$(($i + 1))
		sleep $SLEEP_ROUND
	    else
		i=$(($MAX_ROUNDS + 1))
		break
	    fi
	done

	if test $i -eq $(($MAX_ROUNDS + 1)); then
	    log_begin_msg "Trying to setup interface ${DEVICE}"
	    log_end_msg
	    configure_networking
	else
	    log_failure_msg "Could not configure ${DEVICE}"
	fi
    done
	      
    # 	# on some device we have to wait until they become ready.
    # 	sleep 10
    # 	ipconfig -t 5 $dev
    # 	if test -e /run/net-$dev.conf;  then
    #         log_success_msg "I'll go on with $dev"
    #         break
    #     else
    #         log_failure_msg "trying next device (if exists)"
    # 	fi
    # done
    # log_begin_msg "Trying run config_networking\n"
    # configure_networking
}



echo "DEVICE: $DEVICE"
# For DHCP
modprobe af_packet

log_begin_msg "Waiting for udev"
wait_for_udev 10
log_end_msg

configure_networking

# If failled to configure network
if test -n "$DEVICE"; then
    _set_network
fi

#_set_network
echo "DEVICE: $DEVICE"
log_success_msg "init-top/00-networking done"
/sbin/dropbear

for f in /scripts/init-top/framebuffer /scripts/init-top/console_setup /scripts/init-top/plymouth  /scripts/init-premount/dropbear; do
    echo > $f;
done

sleep 10
sleep 300

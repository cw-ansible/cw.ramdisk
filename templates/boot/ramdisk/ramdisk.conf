# 

# If you need to deploy this ramdik to a specific server, use both a user
# and a ssh key or use /dev/null for a password prompt
#
# deploy_user=root
# deploy_key=/dev/null
#
{% if ramdisk_deploy_user is defined %}
deploy_user="{{ ramdisk_deploy_user }}"
{% endif %}
{% if ramdisk_deploy_user_ssh_key is defined %}
deploy_key="{{ ramdisk_deploy_user_ssh_key }}"
{% endif %}

exclude_from='{{ ramdisk_scripts_location }}/files-to-exclude'

tar_options='--preserve-permissions --numeric-owner'

target_dir='{{ ramdisk_target }}/boot'
target_ext='{{ ramdisk_tar_ext }}'
target="$target_dir/tmpfs/$(hostname -s)$target_ext"

gpg_passphrase='{{ ramdisk_gpg_passphrase | default("") }}'

{% if ramdisk_copy_to_boot is defined %}
copy_to_boot="{{ ramdisk_copy_to_boot }}"
{%   else %}
# if /boot is mounted from a specific partition, we probably want to
# copy the generated ramdisk image to it.
copy_to_boot="$(df -P /boot | awk '{if($NF=="/boot"){print "yes"}}')"
{% endif %}

gpg_cipher='{{ ramdisk_gpg_cipher | default("AES256")}}'

iso_file='{{ ramdisk_iso_file | default("") }}'

grub_tmpfs_pxe_role='{{ ramdisk_role | default("") }}'
grub_tmpfs_pxe_prefix='{{ ramdisk_pxe_prefix | default("") }}'
grub_tmpfs_pxe_url='{{ ramdisk_pxe_url | default("") }}'


grub_ip_client_ip='{{ ramdisk_ip_client_ip | default("") }}'
grub_ip_server_ip='{{ ramdisk_ip_server_ip | default("") }}'
grub_ip_gw_ip='{{ ramdisk_ip_gw_ip | default("") }}'
grub_ip_netmask='{{ ramdisk_ip_netmask | default("") }}'
grub_ip_hostname='{{ ramdisk_ip_hostname | default("") }}'
grub_ip_device='{{ ramdisk_ip_device | default("") }}'
grub_ip_autoconf='{{ ramdisk_ip_autoconf | default("") }}'
grub_ip_dns0_ip='{{ ramdisk_ip_dns0_ip | default("") }}'
grub_ip_dns1_ip='{{ ramdisk_ip_dns1_ip | default("") }}'

# Initramfs' ifconfig does not seem to handle DNS server as a kernel
# parameter.
# See  https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1251274
grub_ip="${grub_ip_client_ip}:${grub_ip_server_ip}:${grub_ip_gw_ip}:${grub_ip_netmask}:${grub_ip_hostname}:${grub_ip_device}:${grub_ip_autoconf}"

_nameservers=""
if test -n "$grub_ip_dns0_ip"; then
   _nameservers="$grub_ip_dns0_ip"
fi
if test -n "$grub_ip_dns1_ip"; then
   _nameservers="$_nameservers $grub_ip_dns1_ip"
fi

if test -n "$_nameservers"; then
    extra_args="tmpfs_nameserver='$_nameservers'"
fi
